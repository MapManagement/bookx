syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "book_related.proto";

option csharp_namespace = "Bookx.ProtoServices";

package user_related;

service UserService {
  rpc GetSingleOwnedBook(SingleOwnedBookRequest)
      returns(UserRelatedRequestReply);
  rpc GetAllOwnedBooks(google.protobuf.Empty) returns(UserRelatedRequestReply);
  rpc GetSingleTag(SingleTagRequest) returns(UserRelatedRequestReply);
  rpc GetAllUserTags(google.protobuf.Empty) returns(UserRelatedRequestReply);
  rpc GetOwnedBooksByTag(SingleTagRequest) returns(UserRelatedRequestReply);

  rpc AddOwnedBook(WriteSingleOwnedBook) returns(SuccessReply);
  rpc AddTag(WriteSingleTag) returns(SuccessReply);

  rpc RemoveOwnedBook(SingleOwnedBookRequest) returns(SuccessReply);
  rpc RemoveTag(SingleTagRequest) returns(SuccessReply);

  rpc EditOwnedBook(WriteSingleOwnedBook) returns(SuccessReply);
  rpc EditTag(WriteSingleTag) returns(SuccessReply);
}

message SuccessReply {
  bool success = 1;
  optional string failure_message = 2;
}

message UserRelatedRequestReply {
  book_related.RequestStatus status = 1;
  optional string message_text = 2;
  oneof message_type {
    ReadSingleOwnedBook owned_book = 3;
    ReadMultipleOwnedBooks multiple_owned_books = 4;
    ReadSingleTag tag = 5;
    ReadMultipleTags multiple_tags = 6;
    google.protobuf.Empty Null = 7;
  }
}

message SingleOwnedBookRequest { int32 owned_book_id = 1; }

message WriteSingleOwnedBook {
  string Isbn = 1;
  int32 rating = 2;
  string comment = 3;
  bool would_recommend = 4;
}

message ReadSingleOwnedBook {
  int32 id = 1;
  book_related.SingleBook Book = 2;
  int32 rating = 3;
  string comment = 4;
  bool would_recommend = 5;
  google.protobuf.Timestamp added_at = 6;
  repeated ReadSingleTag tags = 7;
}

message ReadMultipleOwnedBooks { repeated ReadSingleOwnedBook OwnedBooks = 1; }

message SingleTagRequest { int32 tag_id = 1; }

message ReadSingleTag {
  int32 id = 1;
  string name = 3;
  string color = 4;
}

message WriteSingleTag {
  string name = 1;
  string color = 2;
}

message ReadMultipleTags { repeated ReadSingleTag UserTags = 1; }
