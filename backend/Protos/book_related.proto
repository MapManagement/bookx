syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Bookx.ProtoServices";

package book_related;

service BookService {
  // read from server
  rpc GetSingleAuthor(SingleAuthorRequest) returns(BookRelatedRequestReply);
  rpc GetSinglePublisher(SinglePublisherRequest)
      returns(BookRelatedRequestReply);
  rpc GetSingleGenre(SingleGenreRequest) returns(BookRelatedRequestReply);
  rpc GetSingleLanguage(SingleLanguageRequest) returns(BookRelatedRequestReply);
  rpc GetSingleBook(SingleBookRequest) returns(BookRelatedRequestReply);
}

enum RequestStatus { FOUND = 0; NOT_FOUND = 1; RESTRICTED = 2; ERROR = 3; }

message BookRelatedRequestReply {
  RequestStatus status = 1;
  optional string message_text = 2;
  oneof message_type {
    SingleAuthor author = 3;
    SinglePublisher publisher = 4;
    SingleGenre genre = 5;
    SingleLanguage language = 6;
    SingleBook book = 7;
    google.protobuf.Empty Null = 8;
  }
}

// Author
message SingleAuthorRequest { int32 id = 1; }

message SingleAuthor {
  int32 id = 1;
  string first_name = 2;
  string last_name = 3;
  optional google.protobuf.Timestamp birthdate = 4;
}

// Publisher
message SinglePublisherRequest { int32 id = 1; }

message SinglePublisher {
  int32 id = 1;
  string name = 2;
}

// Genre
message SingleGenreRequest { int32 id = 1; }

message SingleGenre {
  int32 id = 1;
  string name = 2;
}

// Language
message SingleLanguageRequest { int32 id = 1; }

message SingleLanguage {
  int32 id = 1;
  string name = 2;
}

// Book
message SingleBookRequest { string isbn = 1; }

message SingleBook {
  string isbn = 1;
  string title = 2;
  bytes cover = 3;
  int32 number_of_pages = 4;
  string shop_link = 5;
  string blurb = 6;
  google.protobuf.Timestamp release_date = 7;
  repeated SingleAuthor authors = 8;
  SingleLanguage language = 9;
  SinglePublisher publisher = 10;
  repeated SingleGenre genres = 11;
}
